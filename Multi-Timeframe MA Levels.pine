// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © allen92810

// A ton of credit goes to Lepelle [https://www.tradingview.com/u/Lepelle/] and his indicator,
// "Lepelle's Key Levels" [https://www.tradingview.com/script/ltF1SePF-Lepelle-s-Key-Levels/] which was the basis
// for this indicator.  I first added an array of moving average levels to his work before then stripping it all
// down to just the moving averages to make this an independent indicator.  This indicator is intended to complement
// and be used with the "Lepelle's Key Levels" indicator.

//@version=5
indicator("Multi-Timeframe MA Levels", shorttitle='MTF MA Levels', overlay=true, max_lines_count=120)

var ALERT_TT = "Enabling the alert here is only part of the process of getting alerts.  You also need to create an alert on this indicator.  You only need to do this once: From the chart, create an alert using the 'Create Alert' dialog box and select this indicator in the 'Condition' field. See https://www.tradingview.com/chart/?solution=43000597494"

//------------------------------ Styling Inputs ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
var linesize      = input.string(defval='Small', title='Line Width',     options=['Small', 'Medium', 'Large'],   group='Style Settings', inline='1')
var linestyle     = input.string(defval='Solid', title='Line Style',     options=['Solid', 'Dashed', 'Dotted'],  group='Style Settings', inline='1')
var labelsize     = input.string(defval='Small', title='   Text Size',   options=['Small', 'Medium', 'Large'],   group='Style Settings', inline='2')
var distanceright = input.int   (defval=5,       title='Distance',       minval=1, maxval=100,                   group='Style Settings', inline='2', tooltip='Label distance from candlesticks, max 100. During Market Close, Distance does not work.')
var labelpos      = input.string(defval='Right', title='Label Position', options=['Top', 'Right'],               group='Style Settings', inline='3')
var HidePrice     = input.bool  (defval=false,   title='Hide Prices',                                            group='Style Settings', inline='4', tooltip='Hide Price on Levels')
var useShorthand  = input.bool  (defval=false,   title='Use ShortHand',                                          group='Style Settings', inline='4', tooltip='Abbreviate Labels')

//------------------------------ Moving Averages Array Inputs ---------------------------------------------------------------------
var MA_8EMA_Color           = input.color(defval=#ffeb3b, title=  '8 EMA', group='Moving Average Levels', inline='2')
var MA_21EMA_Color          = input.color(defval=#00bcd4, title= '21 EMA', group='Moving Average Levels', inline='3')
var MA_50SMA_Color          = input.color(defval=#4caf50, title= '50 SMA', group='Moving Average Levels', inline='4')
var MA_100SMA_Color         = input.color(defval=#ff9800, title='100 SMA', group='Moving Average Levels', inline='5')
var MA_200SMA_Color         = input.color(defval=#f23645, title='200 SMA', group='Moving Average Levels', inline='6')

var is_8EMA_2Min_enabled    = input.bool(defval=false,      title='2 Min',   group='Moving Average Levels', inline='2')
var is_8EMA_5Min_enabled    = input.bool(defval=true,       title='5 Min',   group='Moving Average Levels', inline='2')
var is_8EMA_1Hour_enabled   = input.bool(defval=true,       title='Hourly',  group='Moving Average Levels', inline='2')
var is_8EMA_1Day_enabled    = input.bool(defval=true,       title='Daily',   group='Moving Average Levels', inline='2')

var is_21EMA_2Min_enabled   = input.bool(defval=false,      title='2 Min',   group='Moving Average Levels', inline='3')
var is_21EMA_5Min_enabled   = input.bool(defval=true,       title='5 Min',   group='Moving Average Levels', inline='3')
var is_21EMA_1Hour_enabled  = input.bool(defval=true,       title='Hourly',  group='Moving Average Levels', inline='3')
var is_21EMA_1Day_enabled   = input.bool(defval=true,       title='Daily',   group='Moving Average Levels', inline='3')

var is_50SMA_2Min_enabled   = input.bool(defval=false,      title='2 Min',   group='Moving Average Levels', inline='4')
var is_50SMA_5Min_enabled   = input.bool(defval=false,      title='5 Min',   group='Moving Average Levels', inline='4')
var is_50SMA_1Hour_enabled  = input.bool(defval=true,       title='Hourly',  group='Moving Average Levels', inline='4')
var is_50SMA_1Day_enabled   = input.bool(defval=true,       title='Daily',   group='Moving Average Levels', inline='4')

var is_100SMA_2Min_enabled  = input.bool(defval=false,      title='2 Min',   group='Moving Average Levels', inline='5')
var is_100SMA_5Min_enabled  = input.bool(defval=false,      title='5 Min',   group='Moving Average Levels', inline='5')
var is_100SMA_1Hour_enabled = input.bool(defval=true,       title='Hourly',  group='Moving Average Levels', inline='5')
var is_100SMA_1Day_enabled  = input.bool(defval=true,       title='Daily',   group='Moving Average Levels', inline='5')

var is_200SMA_2Min_enabled  = input.bool(defval=false,      title='2 Min',   group='Moving Average Levels', inline='6')
var is_200SMA_5Min_enabled  = input.bool(defval=false,      title='5 Min',   group='Moving Average Levels', inline='6')
var is_200SMA_1Hour_enabled = input.bool(defval=true,       title='Hourly',  group='Moving Average Levels', inline='6')
var is_200SMA_1Day_enabled  = input.bool(defval=true,       title='Daily',   group='Moving Average Levels', inline='6')

//------------------------------ Moving Averages Crossover Alert Inputs ---------------------------------------------------------------------
var is_8EMA_1Hour_Alert_enabled   = input.bool(defval=false, title='Enable alert on 8 EMA (Hourly) crossover',   group='Hourly Moving Average Crossover Alerts', tooltip=ALERT_TT)
var is_21EMA_1Hour_Alert_enabled  = input.bool(defval=false, title='Enable alert on 21 EMA (Hourly) crossover',  group='Hourly Moving Average Crossover Alerts', tooltip=ALERT_TT)
var is_50SMA_1Hour_Alert_enabled  = input.bool(defval=false, title='Enable alert on 50 SMA (Hourly) crossover',  group='Hourly Moving Average Crossover Alerts', tooltip=ALERT_TT)
var is_200SMA_1Hour_Alert_enabled = input.bool(defval=false, title='Enable alert on 200 SMA (Hourly) crossover', group='Hourly Moving Average Crossover Alerts', tooltip=ALERT_TT)

var is_8EMA_1Day_Alert_enabled   = input.bool(defval=false, title='Enable alert on 8 EMA (Daily) crossover',     group='Daily Moving Average Crossover Alerts', tooltip=ALERT_TT)
var is_21EMA_1Day_Alert_enabled  = input.bool(defval=false, title='Enable alert on 21 EMA (Daily) crossover',    group='Daily Moving Average Crossover Alerts', tooltip=ALERT_TT)
var is_50SMA_1Day_Alert_enabled  = input.bool(defval=false, title='Enable alert on 50 SMA (Daily) crossover',    group='Daily Moving Average Crossover Alerts', tooltip=ALERT_TT)
var is_200SMA_1Day_Alert_enabled = input.bool(defval=false, title='Enable alert on 200 SMA (Daily) crossover',   group='Daily Moving Average Crossover Alerts', tooltip=ALERT_TT)

// Define label text to be used
var ema8_2Min_Text   = useShorthand ?  '8ma(2)' : '8 EMA (2 Min)'  
var ema21_2Min_Text  = useShorthand ?  '21ma(2)' : '21 EMA (2 Min)'
var sma50_2Min_Text  = useShorthand ?  '50ma(2)' : '50 SMA (2 Min)'
var sma100_2Min_Text = useShorthand ?  '100ma(2)' :'100 SMA (2 Min)'
var sma200_2Min_Text = useShorthand ?  '200ma(2)' : '200 SMA (2 Min)'

var ema8_5Min_Text   = useShorthand ?  '8ma(5)' : '8 EMA (5 Min)'  
var ema21_5Min_Text  = useShorthand ?  '21ma(5)' : '21 EMA (5 Min)'
var sma50_5Min_Text  = useShorthand ?  '50ma(5)' : '50 SMA (5 Min)'
var sma100_5Min_Text = useShorthand ?  '100ma(5)' :'100 SMA (5 Min)'
var sma200_5Min_Text = useShorthand ?  '200ma(5)' : '200 SMA (5 Min)'

var ema8_1Hour_Text   = useShorthand ? '8ma(h)' : '8 EMA (Hourly)'  
var ema21_1Hour_Text  = useShorthand ? '21ma(h)' : '21 EMA (Hourly)'
var sma50_1Hour_Text  = useShorthand ? '50ma(h)' : '50 SMA (Hourly)'
var sma100_1Hour_Text = useShorthand ? '100ma(h)' :'100 SMA (Hourly)'
var sma200_1Hour_Text = useShorthand ? '200ma(h)' : '200 SMA (Hourly)'

var ema8_1Day_Text   = useShorthand ? '8ma(d)' : '8 EMA (Daily)'  
var ema21_1Day_Text  = useShorthand ? '21ma(d)' : '21 EMA (Daily)'
var sma50_1Day_Text  = useShorthand ? '50ma(d)' : '50 SMA (Daily)'
var sma100_1Day_Text = useShorthand ? '100ma(d)' :'100 SMA (Daily)'
var sma200_1Day_Text = useShorthand ? '200ma(d)' : '200 SMA (Daily)'

// Apply global style settings ----------------------------------------------
linewidthint = 1
if linesize == 'Small'
    linewidthint := 1
    linewidthint
if linesize == 'Medium'
    linewidthint := 2
    linewidthint
if linesize == 'Large'
    linewidthint := 3
    linewidthint

var DEFAULT_LINE_WIDTH = linewidthint
var DEFAULT_TAIL_WIDTH = linewidthint

fontsize = size.small

if labelsize == 'Small'
    fontsize := size.small
    fontsize

if labelsize == 'Medium'
    fontsize := size.normal
    fontsize

if labelsize == 'Large'
    fontsize := size.large
    fontsize

linestyles = line.style_solid
if linestyle == 'Dashed'
    linestyles := line.style_dashed
    linestyles

if linestyle == 'Dotted'
    linestyles := line.style_dotted
    linestyles

var DEFAULT_LABEL_STYLE = label.style_label_left

if labelpos == 'Top'
    DEFAULT_LABEL_STYLE := label.style_none

if labelpos == 'Bottom'
    DEFAULT_LABEL_STYLE := label.style_label_left

if labelpos == 'Left'
    DEFAULT_LABEL_STYLE :=  label.style_label_left

var DEFAULT_LABEL_SIZE = fontsize

var DEFAULT_EXTEND_RIGHT = distanceright

//------------------------------ Alternate Time Frame Data ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
[MA_2Min_Time,   ema8_2Min_price, ema21_2Min_price, sma50_2Min_price, sma100_2Min_price, sma200_2Min_price]  = request.security(syminfo.tickerid, '2',  [time, ta.ema(close,8), ta.ema(close,21),ta.sma(close,50),ta.sma(close,100), ta.sma(close,200)], lookahead=barmerge.lookahead_on)
[MA_5Min_Time,   ema8_5Min_price, ema21_5Min_price, sma50_5Min_price, sma100_5Min_price, sma200_5Min_price]  = request.security(syminfo.tickerid, '5',  [time, ta.ema(close,8), ta.ema(close,21),ta.sma(close,50),ta.sma(close,100), ta.sma(close,200)], lookahead=barmerge.lookahead_on)
[MA_1Hour_Time,  ema8_1Hour_price,ema21_1Hour_price,sma50_1Hour_price,sma100_1Hour_price,sma200_1Hour_price] = request.security(syminfo.tickerid, '60', [time, ta.ema(close,8), ta.ema(close,21),ta.sma(close,50),ta.sma(close,100), ta.sma(close,200)], lookahead=barmerge.lookahead_on)
[MA_1Day_Time,   ema8_1Day_price, ema21_1Day_price, sma50_1Day_price, sma100_1Day_price, sma200_1Day_price]  = request.security(syminfo.tickerid, 'D',  [time, ta.ema(close,8), ta.ema(close,21),ta.sma(close,50),ta.sma(close,100), ta.sma(close,200)], lookahead=barmerge.lookahead_on)

//------------------------------------ Plotting --------------------------------------------------------------------------
var pricearray = array.new_float(0)
var labelarray = array.new_label(0)

limit_right = timenow + ((time - time[5]) * DEFAULT_EXTEND_RIGHT) //Price Levels Distance

f_LevelMerge(pricearray, labelarray, currentprice, currentlabel, currentcolor) =>
    if array.includes(pricearray, currentprice)
        whichindex = array.indexof(pricearray, currentprice)
        labelhold = array.get(labelarray, whichindex)
        whichtext = label.get_text(labelhold)
        label.set_text(labelhold, label.get_text(currentlabel)   + ' / ' + whichtext)
        label.set_xy(labelhold, limit_right , currentprice)
        label.set_text(currentlabel, '')
        label.set_textcolor(labelhold, currentcolor)
        label.set_style(labelhold, DEFAULT_LABEL_STYLE)
              
    else  
        array.push(pricearray, currentprice)
        array.push(labelarray, currentlabel)
        
        if HidePrice ==true 
            label.set_text(currentlabel,label.get_text(currentlabel)) 
        else 
            label.set_text(currentlabel,label.get_text(currentlabel) +' ' + str.tostring (currentprice, '0.00') )
        label.set_xy(currentlabel, limit_right , currentprice)


// reset the levels at the end of last bar
if barstate.islast
    pricearray := array.new_float(0)
    labelarray := array.new_label(0)

// 2-Minute Timeframe EMA Lines ---------------------------------------------------------------------------------------------------
//8 EMA (2 Minute)
    if is_8EMA_2Min_enabled
        var ema8_2Min_lne = line.new(MA_2Min_Time, ema8_2Min_price, limit_right, ema8_2Min_price,  color = MA_8EMA_Color, width =DEFAULT_LINE_WIDTH, xloc=xloc.bar_time,style=linestyles)            
        var ema8_2Min_lbl = label.new(x=limit_right, y=ema8_2Min_price, text=ema8_2Min_Text, color = color(na),style=DEFAULT_LABEL_STYLE, textcolor=MA_8EMA_Color, size=DEFAULT_LABEL_SIZE, xloc=xloc.bar_time)
        line.set_xy1  (ema8_2Min_lne, MA_2Min_Time,ema8_2Min_price)   
        line.set_xy2  (ema8_2Min_lne,limit_right , ema8_2Min_price) 
        label.set_text(ema8_2Min_lbl, ema8_2Min_Text)
        f_LevelMerge(pricearray, labelarray, ema8_2Min_price, ema8_2Min_lbl, MA_8EMA_Color)

//21 EMA (2 Minute)
    if is_21EMA_2Min_enabled
        var ema21_2Min_lne = line.new(MA_2Min_Time, ema21_2Min_price,limit_right, ema21_2Min_price,  color = MA_21EMA_Color, width =DEFAULT_LINE_WIDTH, xloc=xloc.bar_time,style=linestyles)            
        var ema21_2Min_lbl = label.new(x=limit_right, y=ema21_2Min_price, text=ema21_2Min_Text, color = color(na),style=DEFAULT_LABEL_STYLE, textcolor=MA_21EMA_Color, size=DEFAULT_LABEL_SIZE, xloc=xloc.bar_time)
        line.set_xy1  (ema21_2Min_lne, MA_2Min_Time,ema21_2Min_price)   
        line.set_xy2  (ema21_2Min_lne,limit_right , ema21_2Min_price) 
        label.set_text(ema21_2Min_lbl, ema21_2Min_Text)
        f_LevelMerge(pricearray, labelarray, ema21_2Min_price, ema21_2Min_lbl, MA_21EMA_Color)

//50 SMA (2 Minute)
    if is_50SMA_2Min_enabled
        var sma50_2Min_lne = line.new(MA_2Min_Time, sma50_2Min_price,limit_right, sma50_2Min_price,  color = MA_50SMA_Color, width =DEFAULT_LINE_WIDTH, xloc=xloc.bar_time,style=linestyles)            
        var sma50_2Min_lbl = label.new(x=limit_right, y=sma50_2Min_price, text=sma50_2Min_Text, color = color(na),style=DEFAULT_LABEL_STYLE, textcolor=MA_50SMA_Color, size=DEFAULT_LABEL_SIZE, xloc=xloc.bar_time)
        line.set_xy1  (sma50_2Min_lne, MA_2Min_Time,sma50_2Min_price)   
        line.set_xy2  (sma50_2Min_lne,limit_right , sma50_2Min_price) 
        label.set_text(sma50_2Min_lbl, sma50_2Min_Text)
        f_LevelMerge(pricearray, labelarray, sma50_2Min_price, sma50_2Min_lbl, MA_50SMA_Color)

//100 SMA (2 Minute)
    if is_100SMA_2Min_enabled
        var sma100_2Min_lne = line.new(MA_2Min_Time, sma100_2Min_price,limit_right, sma100_2Min_price,  color = MA_100SMA_Color, width =DEFAULT_LINE_WIDTH, xloc=xloc.bar_time,style=linestyles)            
        var sma100_2Min_lbl = label.new(x=limit_right, y=sma100_2Min_price, text=sma100_2Min_Text, color = color(na),style=DEFAULT_LABEL_STYLE, textcolor=MA_100SMA_Color, size=DEFAULT_LABEL_SIZE, xloc=xloc.bar_time)
        line.set_xy1(sma100_2Min_lne, MA_2Min_Time,sma100_2Min_price)   
        line.set_xy2  (sma100_2Min_lne,limit_right , sma100_2Min_price) 
        label.set_text(sma100_2Min_lbl, sma100_2Min_Text)
        f_LevelMerge(pricearray, labelarray, sma100_2Min_price, sma100_2Min_lbl, MA_100SMA_Color)

//200 SMA (2 Minute)
    if is_200SMA_2Min_enabled
        var sma200_2Min_lne = line.new(MA_2Min_Time, sma200_2Min_price,limit_right, sma200_2Min_price,  color = MA_200SMA_Color, width =DEFAULT_LINE_WIDTH, xloc=xloc.bar_time,style=linestyles)            
        var sma200_2Min_lbl = label.new(x=limit_right, y=sma200_2Min_price, text=sma200_2Min_Text, color = color(na),style=DEFAULT_LABEL_STYLE,textalign = text.align_right, textcolor=MA_200SMA_Color, size=DEFAULT_LABEL_SIZE, xloc=xloc.bar_time)
        line.set_xy1  (sma200_2Min_lne, MA_2Min_Time,sma200_2Min_price)   
        line.set_xy2  (sma200_2Min_lne,limit_right , sma200_2Min_price) 
        label.set_text(sma200_2Min_lbl, sma200_2Min_Text)
        f_LevelMerge(pricearray, labelarray, sma200_2Min_price, sma200_2Min_lbl, MA_200SMA_Color)

// 5-Minute Timeframe EMA Lines ---------------------------------------------------------------------------------------------------
//8 EMA (5 Minute)
    if is_8EMA_5Min_enabled
        var ema8_5Min_lne = line.new(MA_5Min_Time, ema8_5Min_price, limit_right, ema8_5Min_price,  color = MA_8EMA_Color, width =DEFAULT_LINE_WIDTH, xloc=xloc.bar_time,style=linestyles)            
        var ema8_5Min_lbl = label.new(x=limit_right, y=ema8_5Min_price, text=ema8_5Min_Text, color = color(na),style=DEFAULT_LABEL_STYLE, textcolor=MA_8EMA_Color, size=DEFAULT_LABEL_SIZE, xloc=xloc.bar_time)
        line.set_xy1  (ema8_5Min_lne, MA_5Min_Time,ema8_5Min_price)   
        line.set_xy2  (ema8_5Min_lne,limit_right , ema8_5Min_price) 
        label.set_text(ema8_5Min_lbl, ema8_5Min_Text)
        f_LevelMerge(pricearray, labelarray, ema8_5Min_price, ema8_5Min_lbl, MA_8EMA_Color)

//21 EMA (5 Minute)
    if is_21EMA_5Min_enabled
        var ema21_5Min_lne = line.new(MA_5Min_Time, ema21_5Min_price,limit_right, ema21_5Min_price,  color = MA_21EMA_Color, width =DEFAULT_LINE_WIDTH, xloc=xloc.bar_time,style=linestyles)            
        var ema21_5Min_lbl = label.new(x=limit_right, y=ema21_5Min_price, text=ema21_5Min_Text, color = color(na),style=DEFAULT_LABEL_STYLE, textcolor=MA_21EMA_Color, size=DEFAULT_LABEL_SIZE, xloc=xloc.bar_time)
        line.set_xy1  (ema21_5Min_lne, MA_5Min_Time,ema21_5Min_price)   
        line.set_xy2  (ema21_5Min_lne,limit_right , ema21_5Min_price) 
        label.set_text(ema21_5Min_lbl, ema21_5Min_Text)
        f_LevelMerge(pricearray, labelarray, ema21_5Min_price, ema21_5Min_lbl, MA_21EMA_Color)

//50 SMA (5 Minute)
    if is_50SMA_5Min_enabled
        var sma50_5Min_lne = line.new(MA_5Min_Time, sma50_5Min_price,limit_right, sma50_5Min_price,  color = MA_50SMA_Color, width =DEFAULT_LINE_WIDTH, xloc=xloc.bar_time,style=linestyles)            
        var sma50_5Min_lbl = label.new(x=limit_right, y=sma50_5Min_price, text=sma50_5Min_Text, color = color(na),style=DEFAULT_LABEL_STYLE, textcolor=MA_50SMA_Color, size=DEFAULT_LABEL_SIZE, xloc=xloc.bar_time)
        line.set_xy1  (sma50_5Min_lne, MA_5Min_Time,sma50_5Min_price)   
        line.set_xy2  (sma50_5Min_lne,limit_right , sma50_5Min_price) 
        label.set_text(sma50_5Min_lbl, sma50_5Min_Text)
        f_LevelMerge(pricearray, labelarray, sma50_5Min_price, sma50_5Min_lbl, MA_50SMA_Color)

//100 SMA (5 Minute)
    if is_100SMA_5Min_enabled
        var sma100_5Min_lne = line.new(MA_5Min_Time, sma100_5Min_price,limit_right, sma100_5Min_price,  color = MA_100SMA_Color, width =DEFAULT_LINE_WIDTH, xloc=xloc.bar_time,style=linestyles)            
        var sma100_5Min_lbl = label.new(x=limit_right, y=sma100_5Min_price, text=sma100_5Min_Text, color = color(na),style=DEFAULT_LABEL_STYLE, textcolor=MA_100SMA_Color, size=DEFAULT_LABEL_SIZE, xloc=xloc.bar_time)
        line.set_xy1(sma100_5Min_lne, MA_5Min_Time,sma100_5Min_price)   
        line.set_xy2  (sma100_5Min_lne,limit_right , sma100_5Min_price) 
        label.set_text(sma100_5Min_lbl, sma100_5Min_Text)
        f_LevelMerge(pricearray, labelarray, sma100_5Min_price, sma100_5Min_lbl, MA_100SMA_Color)

//200 SMA (5 Minute)
    if is_200SMA_5Min_enabled
        var sma200_5Min_lne = line.new(MA_5Min_Time, sma200_5Min_price,limit_right, sma200_5Min_price,  color = MA_200SMA_Color, width =DEFAULT_LINE_WIDTH, xloc=xloc.bar_time,style=linestyles)            
        var sma200_5Min_lbl = label.new(x=limit_right, y=sma200_5Min_price, text=sma200_5Min_Text, color = color(na),style=DEFAULT_LABEL_STYLE,textalign = text.align_right, textcolor=MA_200SMA_Color, size=DEFAULT_LABEL_SIZE, xloc=xloc.bar_time)
        line.set_xy1  (sma200_5Min_lne, MA_5Min_Time,sma200_5Min_price)   
        line.set_xy2  (sma200_5Min_lne,limit_right , sma200_5Min_price) 
        label.set_text(sma200_5Min_lbl, sma200_5Min_Text)
        f_LevelMerge(pricearray, labelarray, sma200_5Min_price, sma200_5Min_lbl, MA_200SMA_Color)

// Hourly Timeframe EMA Lines ---------------------------------------------------------------------------------------------------
//8 EMA (Hourly)
    if is_8EMA_1Hour_enabled
        var ema8_1Hour_lne = line.new(MA_1Hour_Time, ema8_1Hour_price, limit_right, ema8_1Hour_price,  color = MA_8EMA_Color, width =DEFAULT_LINE_WIDTH, xloc=xloc.bar_time,style=linestyles)            
        var ema8_1Hour_lbl = label.new(x=limit_right, y=ema8_1Hour_price, text=ema8_1Hour_Text, color = color(na),style=DEFAULT_LABEL_STYLE, textcolor=MA_8EMA_Color, size=DEFAULT_LABEL_SIZE, xloc=xloc.bar_time)
        line.set_xy1  (ema8_1Hour_lne, MA_1Hour_Time,ema8_1Hour_price)   
        line.set_xy2  (ema8_1Hour_lne,limit_right , ema8_1Hour_price) 
        label.set_text(ema8_1Hour_lbl, ema8_1Hour_Text)
        f_LevelMerge(pricearray, labelarray, ema8_1Hour_price, ema8_1Hour_lbl, MA_8EMA_Color)

//21 EMA (Hourly)
    if is_21EMA_1Hour_enabled
        var ema21_1Hour_lne = line.new(MA_1Hour_Time, ema21_1Hour_price,limit_right, ema21_1Hour_price,  color = MA_21EMA_Color, width =DEFAULT_LINE_WIDTH, xloc=xloc.bar_time,style=linestyles)            
        var ema21_1Hour_lbl = label.new(x=limit_right, y=ema21_1Hour_price, text=ema21_1Hour_Text, color = color(na),style=DEFAULT_LABEL_STYLE, textcolor=MA_21EMA_Color, size=DEFAULT_LABEL_SIZE, xloc=xloc.bar_time)
        line.set_xy1  (ema21_1Hour_lne, MA_1Hour_Time,ema21_1Hour_price)   
        line.set_xy2  (ema21_1Hour_lne,limit_right , ema21_1Hour_price) 
        label.set_text(ema21_1Hour_lbl, ema21_1Hour_Text)
        f_LevelMerge(pricearray, labelarray, ema21_1Hour_price, ema21_1Hour_lbl, MA_21EMA_Color)

//50 SMA (Hourly)
    if is_50SMA_1Hour_enabled
        var sma50_1Hour_lne = line.new(MA_1Hour_Time, sma50_1Hour_price,limit_right, sma50_1Hour_price,  color = MA_50SMA_Color, width =DEFAULT_LINE_WIDTH, xloc=xloc.bar_time,style=linestyles)            
        var sma50_1Hour_lbl = label.new(x=limit_right, y=sma50_1Hour_price, text=sma50_1Hour_Text, color = color(na),style=DEFAULT_LABEL_STYLE, textcolor=MA_50SMA_Color, size=DEFAULT_LABEL_SIZE, xloc=xloc.bar_time)
        line.set_xy1  (sma50_1Hour_lne, MA_1Hour_Time,sma50_1Hour_price)   
        line.set_xy2  (sma50_1Hour_lne,limit_right , sma50_1Hour_price) 
        label.set_text(sma50_1Hour_lbl, sma50_1Hour_Text)
        f_LevelMerge(pricearray, labelarray, sma50_1Hour_price, sma50_1Hour_lbl, MA_50SMA_Color)

//100 SMA (Hourly)
    if is_100SMA_1Hour_enabled
        var sma100_1Hour_lne = line.new(MA_1Hour_Time, sma100_1Hour_price,limit_right, sma100_1Hour_price,  color = MA_100SMA_Color, width =DEFAULT_LINE_WIDTH, xloc=xloc.bar_time,style=linestyles)            
        var sma100_1Hour_lbl = label.new(x=limit_right, y=sma100_1Hour_price, text=sma100_1Hour_Text, color = color(na),style=DEFAULT_LABEL_STYLE, textcolor=MA_100SMA_Color, size=DEFAULT_LABEL_SIZE, xloc=xloc.bar_time)
        line.set_xy1(sma100_1Hour_lne, MA_1Hour_Time,sma100_1Hour_price)   
        line.set_xy2  (sma100_1Hour_lne,limit_right , sma100_1Hour_price) 
        label.set_text(sma100_1Hour_lbl, sma100_1Hour_Text)
        f_LevelMerge(pricearray, labelarray, sma100_1Hour_price, sma100_1Hour_lbl, MA_100SMA_Color)

//200 SMA (Hourly)
    if is_200SMA_1Hour_enabled
        var sma200_1Hour_lne = line.new(MA_1Hour_Time, sma200_1Hour_price,limit_right, sma200_1Hour_price,  color = MA_200SMA_Color, width =DEFAULT_LINE_WIDTH, xloc=xloc.bar_time,style=linestyles)            
        var sma200_1Hour_lbl = label.new(x=limit_right, y=sma200_1Hour_price, text=sma200_1Hour_Text, color = color(na),style=DEFAULT_LABEL_STYLE,textalign = text.align_right, textcolor=MA_200SMA_Color, size=DEFAULT_LABEL_SIZE, xloc=xloc.bar_time)
        line.set_xy1  (sma200_1Hour_lne, MA_1Hour_Time,sma200_1Hour_price)   
        line.set_xy2  (sma200_1Hour_lne,limit_right , sma200_1Hour_price) 
        label.set_text(sma200_1Hour_lbl, sma200_1Hour_Text)
        f_LevelMerge(pricearray, labelarray, sma200_1Hour_price, sma200_1Hour_lbl, MA_200SMA_Color)

// Daily Timeframe EMA Lines ---------------------------------------------------------------------------------------------------
//8 EMA (Daily)
    if is_8EMA_1Day_enabled
        var ema8_1Day_lne = line.new(MA_1Day_Time, ema8_1Day_price, limit_right, ema8_1Day_price,  color = MA_8EMA_Color, width =DEFAULT_LINE_WIDTH, xloc=xloc.bar_time,style=linestyles)            
        var ema8_1Day_lbl = label.new(x=limit_right, y=ema8_1Day_price, text=ema8_1Day_Text, color = color(na),style=DEFAULT_LABEL_STYLE, textcolor=MA_8EMA_Color, size=DEFAULT_LABEL_SIZE, xloc=xloc.bar_time)
        line.set_xy1  (ema8_1Day_lne, MA_1Day_Time,ema8_1Day_price)   
        line.set_xy2  (ema8_1Day_lne,limit_right , ema8_1Day_price) 
        label.set_text(ema8_1Day_lbl, ema8_1Day_Text)
        f_LevelMerge(pricearray, labelarray, ema8_1Day_price, ema8_1Day_lbl, MA_8EMA_Color)

//21 EMA (Daily)
    if is_21EMA_1Day_enabled
        var ema21_1Day_lne = line.new(MA_1Day_Time, ema21_1Day_price,limit_right, ema21_1Day_price,  color = MA_21EMA_Color, width =DEFAULT_LINE_WIDTH, xloc=xloc.bar_time,style=linestyles)            
        var ema21_1Day_lbl = label.new(x=limit_right, y=ema21_1Day_price, text=ema21_1Day_Text, color = color(na),style=DEFAULT_LABEL_STYLE, textcolor=MA_21EMA_Color, size=DEFAULT_LABEL_SIZE, xloc=xloc.bar_time)
        line.set_xy1  (ema21_1Day_lne, MA_1Day_Time,ema21_1Day_price)   
        line.set_xy2  (ema21_1Day_lne,limit_right , ema21_1Day_price) 
        label.set_text(ema21_1Day_lbl, ema21_1Day_Text)
        f_LevelMerge(pricearray, labelarray, ema21_1Day_price, ema21_1Day_lbl, MA_21EMA_Color)

//50 SMA (Daily)
    if is_50SMA_1Day_enabled
        var sma50_1Day_lne = line.new(MA_1Day_Time, sma50_1Day_price,limit_right, sma50_1Day_price,  color = MA_50SMA_Color, width =DEFAULT_LINE_WIDTH, xloc=xloc.bar_time,style=linestyles)            
        var sma50_1Day_lbl = label.new(x=limit_right, y=sma50_1Day_price, text=sma50_1Day_Text, color = color(na),style=DEFAULT_LABEL_STYLE, textcolor=MA_50SMA_Color, size=DEFAULT_LABEL_SIZE, xloc=xloc.bar_time)
        line.set_xy1  (sma50_1Day_lne, MA_1Day_Time,sma50_1Day_price)   
        line.set_xy2  (sma50_1Day_lne,limit_right , sma50_1Day_price) 
        label.set_text(sma50_1Day_lbl, sma50_1Day_Text)
        f_LevelMerge(pricearray, labelarray, sma50_1Day_price, sma50_1Day_lbl, MA_50SMA_Color)

//100 SMA (Daily)
    if is_100SMA_1Day_enabled
        var sma100_1Day_lne = line.new(MA_1Day_Time, sma100_1Day_price,limit_right, sma100_1Day_price,  color = MA_100SMA_Color, width =DEFAULT_LINE_WIDTH, xloc=xloc.bar_time,style=linestyles)            
        var sma100_1Day_lbl = label.new(x=limit_right, y=sma100_1Day_price, text=sma100_1Day_Text, color = color(na),style=DEFAULT_LABEL_STYLE, textcolor=MA_100SMA_Color, size=DEFAULT_LABEL_SIZE, xloc=xloc.bar_time)
        line.set_xy1(sma100_1Day_lne, MA_1Day_Time,sma100_1Day_price)   
        line.set_xy2  (sma100_1Day_lne,limit_right , sma100_1Day_price) 
        label.set_text(sma100_1Day_lbl, sma100_1Day_Text)
        f_LevelMerge(pricearray, labelarray, sma100_1Day_price, sma100_1Day_lbl, MA_100SMA_Color)

//200 SMA (Daily)
    if is_200SMA_1Day_enabled
        var sma200_1Day_lne = line.new(MA_1Day_Time, sma200_1Day_price,limit_right, sma200_1Day_price,  color = MA_200SMA_Color, width =DEFAULT_LINE_WIDTH, xloc=xloc.bar_time,style=linestyles)            
        var sma200_1Day_lbl = label.new(x=limit_right, y=sma200_1Day_price, text=sma200_1Day_Text, color = color(na),style=DEFAULT_LABEL_STYLE,textalign = text.align_right, textcolor=MA_200SMA_Color, size=DEFAULT_LABEL_SIZE, xloc=xloc.bar_time)
        line.set_xy1  (sma200_1Day_lne, MA_1Day_Time,sma200_1Day_price)   
        line.set_xy2  (sma200_1Day_lne,limit_right , sma200_1Day_price) 
        label.set_text(sma200_1Day_lbl, sma200_1Day_Text)
        f_LevelMerge(pricearray, labelarray, sma200_1Day_price, sma200_1Day_lbl, MA_200SMA_Color)

// Alert calculations ------------------------------------------------------------------------------------------------------------
calc_on_every_tick=true

// Daily Moving Average Crossovers
ema8crossD   = ta.crossover(close, ema8_1Day_price)   or ta.crossunder(close, ema8_1Day_price)
ema21crossD  = ta.crossover(close, ema21_1Day_price)  or ta.crossunder(close, ema21_1Day_price)
sma50crossD  = ta.crossover(close, sma50_1Day_price)  or ta.crossunder(close, sma50_1Day_price)
sma200crossD = ta.crossover(close, sma200_1Day_price) or ta.crossunder(close, sma200_1Day_price)
if ema8crossD and is_8EMA_1Day_Alert_enabled 
    alert("Crossing 8 EMA (Daily) at $" + str.tostring (close) , alert.freq_once_per_bar)
if ema21crossD and is_21EMA_1Day_Alert_enabled
    alert("Crossing 21 EMA (Daily) at $" + str.tostring (close) , alert.freq_once_per_bar)
if sma50crossD and is_50SMA_1Day_Alert_enabled
    alert("Crossing 50 SMA (Daily) at $" + str.tostring (close) , alert.freq_once_per_bar)
if sma200crossD and is_200SMA_1Day_Alert_enabled
    alert("Crossing 200 SMA (Daily) at $" + str.tostring (close) , alert.freq_once_per_bar)

// Hourly Moving Average Crossovers
ema8crossH   = ta.crossover(close, ema8_1Hour_price)   or ta.crossunder(close, ema8_1Hour_price)
ema21crossH  = ta.crossover(close, ema21_1Hour_price)  or ta.crossunder(close, ema21_1Hour_price)
sma50crossH  = ta.crossover(close, sma50_1Hour_price)  or ta.crossunder(close, sma50_1Hour_price)
sma200crossH = ta.crossover(close, sma200_1Hour_price) or ta.crossunder(close, sma200_1Hour_price)
if ema8crossH and is_8EMA_1Hour_Alert_enabled
    alert("Crossing 8 EMA (Hourly) at $" + str.tostring (close) , alert.freq_once_per_bar)
if ema21crossH and is_21EMA_1Hour_Alert_enabled
    alert("Crossing 21 EMA (Hourly) at $" + str.tostring (close) , alert.freq_once_per_bar)
if sma50crossH and is_50SMA_1Hour_Alert_enabled
    alert("Crossing 50 SMA (Hourly) at $" + str.tostring (close) , alert.freq_once_per_bar)
if sma200crossH and is_200SMA_1Hour_Alert_enabled
    alert("Crossing 200 SMA (Hourly) at $" + str.tostring (close) , alert.freq_once_per_bar)
